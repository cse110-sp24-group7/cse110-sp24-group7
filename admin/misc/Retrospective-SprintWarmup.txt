Retrium Retrospective, April 30, 2024
Technique: 4Ls
=====================================

Liked
-----
Add notes about what you or your team enjoyed about the iteration. In particular, what went better than expected? Emphasize the positive.

- Liking the End Product (1 vote)
    - I liked that we all pitched in towards the product, working around other commitments and deadlines. I also love the design of the product!
    - All the moving parts came together to create a viable product
    - I think the look of the website was way better than expected and there were a lot more features than I expected to be implemented
    - Integration of all the parts went better than I expected. There were so many branches, folders, and files but it got consolidated into a final piece.

- Division of Labor/Workflow (7 votes)
    - People picking up after each other and the teamwork involved in the process
    - Positive team energy. Everybody contributed and worked together and were responsive on Slack.
    - The division of labor was clear; there was no confusion about what was expected for a task and  we knew what everyone else was working on
    - Workflow was well organized, got the project done on time with minimal time crunch
    - I liked how the works were organized and divided among team members
    - I liked how the team leads organized tasks and how well the team banded together to create the widget.


Learned
-------
Add notes about what new things you or your team learned during the iteration. These can be technical or nontechnical.

- Github (1 vote)
    - Learned GitHub a lot better, as well as a lot about team scheduling and management.
    - I learned about GitHub Actions and how to use Github Projects to set up Issues, Labels, and Listing on the Cloud

- Time Management/Effectively Schedule (5 votes)
    - Learned how to speedrun during crunchtime, be open with communication and what is lacking, how to read other's code
    - I learned that we should figure out each other's availabilities more and also make tasks less dependent on each other.

- Development - Tools at our Disposal (1 vote)
    - I learned more about the design aspect and what documentation to include with any pushed changes
    - How to use ChatGPT to our advantage in case we don't know how to do something and to speed up development

- Integrating Different Features/Working with other people + new code (2 votes)
    - Learnt about integrating different widgets together.
    - Learned how to interact with and build on other code that I hadn't written.
    - I learned how the members and leads work as well as some new technical skills


Lacked
------
Add notes about the things you or your team could have done better during the iteration.

- Workflow (4 votes)
    - The code could've been more streamlined; unclear what was going to be included in the final product
    - Lack of Rigorous Styling and Testing, code style and structure was different as well as how the repository was structured. 
    - Parallelization, repo structure

- Communication (4 votes)
    - communicating and planning progress so that the timeline set out is accomplished
    - Organizing branches and communicating when we'll be done with tasks.
    - Only ending times during check-in
    - I think we didn't lack much just that there could have been better splitting up of tasks based on availability but overall it was still good.

- Time Management (4 votes)
    - Time constraints meant that deadlines were very quick to catch up, so sometimes people had to wait for others' work to be done.
    - Time and schedules from people who might have been busy


Longed For
----------
Add notes about the things you or your team desired to have during the iteration that were not available. These can be technical or nontechnical.

- Time Awareness (3 votes)
    - Better scheduling around personal commitments, better parallelization for efficiency, good code structure from the beginning.
    - Better idea on timing if code depended on something else first.
    - More time awareness
    - Definitely time, with a weeklong sprint it was difficult to meet strict deadlines

- Final Product/Testing (4 votes)
    - a more clear structure in regards to code to avoid duplicate code and extraneous files
    - I feel like it would have been nice to know more specifications about the app but it was also nice having total freedom over it
    - Maybe could use tests for widgets, unsure how that would integrate in the final product but would be nice to automate tests before pull requests.
- Communication with Leads in case things get delayed :D, also Leads to assign things better for developers so that work is easier.  (0 votes)
- Having a working gradient animation with no bugs  (0 votes)

Wrap-Up
=======

With 10 total votes, participants gave this retro an average rating of 4.2.